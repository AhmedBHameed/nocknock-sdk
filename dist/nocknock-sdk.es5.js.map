{"version":3,"file":"nocknock-sdk.es5.js","sources":["../src/helpers/constants.ts","../src/use-cases/forgotPassword.ts","../src/use-cases/login.ts","../src/use-cases/logout.ts","../src/use-cases/resetPassword.ts","../src/use-cases/signup.ts","../src/nocknock-sdk.ts"],"sourcesContent":["export const url = '/nodeys/v1/graphql'\n","import { url } from '../helpers/constants'\nimport { NockNock, ForgotPasswordInput } from '../models/NockNockModel'\n\nfunction forgotPassword<T = any>(this: NockNock, data: ForgotPasswordInput): Promise<T> {\n  if (!this._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return this._httpClient.post<unknown, T>(url, {\n    query:\n      'mutation ForgotPassword($email: String!) {\\n        forgotPassword(email: $email) {\\n            message\\n          __typename\\n        }\\n      }',\n    variables: {\n      email: data.email\n    }\n  })\n}\n\nexport default forgotPassword\n","import { url } from '../helpers/constants'\nimport { LoginInput, NockNock } from '../models/NockNockModel'\n\nfunction login<T = any>(this: NockNock, userData: LoginInput): Promise<T> {\n  if (!this._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return this._httpClient.post<unknown, T>(url, {\n    query:\n      'query Login($userData: LoginDataInput!) {\\n          login(userData: $userData) {\\n            accessToken\\n            refreshToken\\n            userRole\\n            __typename\\n          }\\n        }',\n    variables: {\n      userData: { email: userData.username, password: userData.password }\n    }\n  })\n}\n\nexport default login\n","import { url } from '../helpers/constants'\nimport { NockNock } from '../models/NockNockModel'\n\nfunction logout<T = any>(this: NockNock, username: string, password: string): Promise<T> {\n  if (!this._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return this._httpClient.post<unknown, T>(url, {\n    query: `\n      query Logout {\n        logout {\n            message\n          __typename\n        }\n      }\n      `,\n    variables: {\n      userData: { email: username, password }\n    }\n  })\n}\n\nexport default logout\n","import { url } from '../helpers/constants'\nimport { NockNock, ResetPasswordInput } from '../models/NockNockModel'\n\nfunction resetPassword<T = any>(this: NockNock, data: ResetPasswordInput): Promise<T> {\n  if (!this._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return this._httpClient.post<unknown, T>(url, {\n    query:\n      'mutation ResetPassword($userData: ResetPasswordInput!) {\\n        resetPassword(userData: $userData) {\\n            message\\n          __typename\\n        }\\n      }',\n    variables: {\n      userData: {\n        password: data.newPassword,\n        userId: data.userId,\n        verificationId: data.verificationId\n      }\n    }\n  })\n}\n\nexport default resetPassword\n","import { url } from '../helpers/constants'\nimport { NockNock, SignupInput } from '../models/NockNockModel'\n\nfunction signup<T = any>(this: NockNock, data: SignupInput): Promise<T> {\n  if (!this._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return this._httpClient.post<unknown, T>(url, {\n    query:\n      'mutation Signup($userData: SignupInput!) {\\n        signup(userData: $userData) {\\n            message\\n          __typename\\n        }\\n      }',\n    variables: {\n      userData: {\n        email: data.email,\n        password: data.password,\n        name: {\n          first: data.name.first.trim(),\n          last: data.name.last.trim()\n        }\n      }\n    }\n  })\n}\n\nexport default signup\n","// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\n// import \"core-js/fn/array.find\"\n// ...\n\nimport axios, { AxiosRequestConfig } from 'axios'\nimport {\n  Auth,\n  LoginFun,\n  SignupFun,\n  ForgotPasswordFun,\n  ResetPasswordFun,\n  LogoutFun\n} from './models/NockNockModel'\nimport forgotPassword from './use-cases/forgotPassword'\nimport login from './use-cases/login'\nimport logout from './use-cases/logout'\nimport resetPassword from './use-cases/resetPassword'\nimport signup from './use-cases/signup'\n\nclass NockNock {\n  _httpClient!: any\n  _config!: AxiosRequestConfig | undefined\n  public auth: Auth = {\n    login: login.bind(this) as LoginFun,\n    signup: signup.bind(this) as SignupFun,\n    forgotPassword: forgotPassword.bind(this) as ForgotPasswordFun,\n    resetPassword: resetPassword.bind(this) as ResetPasswordFun,\n    logout: logout.bind(this) as LogoutFun\n  }\n\n  init(config: AxiosRequestConfig): void {\n    this._config = config\n    if (!this._config.baseURL) {\n      throw new Error('No base url provided! Please call init and pass some configuration')\n    }\n\n    this._httpClient = axios.create({\n      ...this._config,\n      withCredentials: !!config.withCredentials\n    })\n  }\n}\n\nconst nockNock = new NockNock()\nexport const init = nockNock.init\nexport const auth = nockNock.auth\nexport default nockNock\n"],"names":[],"mappings":"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"}