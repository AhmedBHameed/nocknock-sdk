{"version":3,"file":"nocknock-sdk.umd.js","sources":["../src/helpers/constants.ts","../src/use-cases/forgotPassword.ts","../src/use-cases/login.ts","../src/use-cases/logout.ts","../src/use-cases/resetPassword.ts","../src/use-cases/signup.ts","../src/nocknock-sdk.ts"],"sourcesContent":["export const url = '/nodeys/v1/graphql'\n","import { url } from '../helpers/constants'\nimport { NockNock, ForgotPasswordInput } from '../models/NockNockModel'\n\nconst forgotPassword = (config: NockNock) => <T = any>(data: ForgotPasswordInput): Promise<T> => {\n  if (!config._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return config._httpClient.post<unknown, T>(url, {\n    query:\n      'mutation ForgotPassword($email: String!) {\\n        forgotPassword(email: $email) {\\n            message\\n          __typename\\n        }\\n      }',\n    variables: {\n      email: data.email\n    }\n  })\n}\n\nexport default forgotPassword\n","import { url } from '../helpers/constants'\nimport { LoginInput, NockNock } from '../models/NockNockModel'\n\nconst login = (config: NockNock) => <T = any>(userData: LoginInput): Promise<T> => {\n  if (!config._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return config._httpClient.post<unknown, T>(url, {\n    query:\n      'query Login($userData: LoginDataInput!) {\\n          login(userData: $userData) {\\n            accessToken\\n            refreshToken\\n            userRole\\n            __typename\\n          }\\n        }',\n    variables: {\n      userData: { email: userData.username, password: userData.password }\n    }\n  })\n}\n\nexport default login\n","import { url } from '../helpers/constants'\nimport { NockNock } from '../models/NockNockModel'\n\nconst logout = (config: NockNock) => <T = any>(username: string, password: string): Promise<T> => {\n  if (!config._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return config._httpClient.post<unknown, T>(url, {\n    query: `\n      query Logout {\n        logout {\n            message\n          __typename\n        }\n      }\n      `,\n    variables: {\n      userData: { email: username, password }\n    }\n  })\n}\n\nexport default logout\n","import { url } from '../helpers/constants'\nimport { NockNock, ResetPasswordInput } from '../models/NockNockModel'\n\nconst resetPassword = (config: NockNock) => <T = any>(data: ResetPasswordInput): Promise<T> => {\n  if (!config._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return config._httpClient.post<unknown, T>(url, {\n    query:\n      'mutation ResetPassword($userData: ResetPasswordInput!) {\\n        resetPassword(userData: $userData) {\\n            message\\n          __typename\\n        }\\n      }',\n    variables: {\n      userData: {\n        password: data.newPassword,\n        userId: data.userId,\n        verificationId: data.verificationId\n      }\n    }\n  })\n}\n\nexport default resetPassword\n","import { url } from '../helpers/constants'\nimport { NockNock, SignupInput } from '../models/NockNockModel'\n\nconst signup = (config: NockNock) => <T = any>(data: SignupInput): Promise<T> => {\n  if (!config._httpClient) {\n    throw new Error(\n      'You have to initialize some configuration first. Please call .init() method and set some configuration.'\n    )\n  }\n\n  return config._httpClient.post<unknown, T>(url, {\n    query:\n      'mutation Signup($userData: SignupInput!) {\\n        signup(userData: $userData) {\\n            message\\n          __typename\\n        }\\n      }',\n    variables: {\n      userData: {\n        email: data.email,\n        password: data.password,\n        name: {\n          first: data.name.first.trim(),\n          last: data.name.last.trim()\n        }\n      }\n    }\n  })\n}\n\nexport default signup\n","// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\n// import \"core-js/fn/array.find\"\n// ...\n\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\nimport {\n  Auth,\n  LoginFun,\n  SignupFun,\n  ForgotPasswordFun,\n  ResetPasswordFun,\n  LogoutFun\n} from './models/NockNockModel'\nimport forgotPassword from './use-cases/forgotPassword'\nimport login from './use-cases/login'\nimport logout from './use-cases/logout'\nimport resetPassword from './use-cases/resetPassword'\nimport signup from './use-cases/signup'\n\nexport function init(config: AxiosRequestConfig) {\n  let _config: AxiosRequestConfig\n  let _httpClient: AxiosInstance\n\n  _config = config\n  if (!_config.baseURL) {\n    throw new Error('No base url provided! Please call init and pass some configuration')\n  }\n\n  _httpClient = axios.create({\n    ..._config,\n    withCredentials: !!config.withCredentials\n  })\n\n  const auth: Auth = {\n    login: login({ _httpClient, _config }) as LoginFun,\n    signup: signup({ _httpClient, _config }) as SignupFun,\n    forgotPassword: forgotPassword({ _httpClient, _config }) as ForgotPasswordFun,\n    resetPassword: resetPassword({ _httpClient, _config }) as ResetPasswordFun,\n    logout: logout({ _httpClient, _config }) as LogoutFun\n  }\n\n  return auth\n}\n"],"names":[],"mappings":"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"}